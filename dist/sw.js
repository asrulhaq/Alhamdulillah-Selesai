const CACHE_NAME="story-app-v3",urlsToCache=["/","/index.html","/app.bundle.js","/app.css","/app.webmanifest","/favicon.png","/logo.png","/images/logo.png","/images/icons/icon-72x72.png","/images/icons/icon-96x96.png","/images/icons/icon-128x128.png","/images/icons/icon-144x144.png","/images/icons/icon-152x152.png","/images/icons/icon-192x192.png","/images/icons/icon-384x384.png","/images/icons/icon-512x512.png"];self.addEventListener("install",(e=>{console.log("👷 Service Worker installing..."),e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log("📦 Pre-caching offline assets"),e.addAll(urlsToCache)))).then((()=>(console.log("✅ Pre-caching complete"),self.skipWaiting()))).catch((e=>{console.error("❌ Pre-caching failed:",e)})))})),self.addEventListener("activate",(e=>{console.log("👷 Service Worker activating..."),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return console.log("🗑️ Deleting old cache:",e),caches.delete(e)}))))).then((()=>(console.log("✅ Service Worker activated"),self.clients.claim()))))})),self.addEventListener("push",(e=>{console.log("📬 Push event received:",e);let o={title:"Story berhasil dibuat",body:"Anda telah membuat story baru",icon:"/icons/icon-192x192.png",badge:"/icons/badge-72x72.png",tag:"story-notification",requireInteraction:!1,data:{url:"/"}};if(e.data)try{const t=e.data.json();console.log("📨 Push data (JSON):",t),o={...o,title:t.title||o.title,body:t.options?.body||t.body||o.body,icon:t.options?.icon||t.icon||o.icon,badge:t.options?.badge||t.badge||o.badge,tag:t.options?.tag||t.tag||o.tag,data:t.data||o.data}}catch(t){try{const t=e.data.text();console.log("📨 Push data (text):",t),t&&t.trim()&&(o.body=t)}catch(e){console.error("❌ Error parsing push data as text:",e)}}const t=self.registration.showNotification(o.title,{body:o.body,icon:o.icon,badge:o.badge,tag:o.tag,requireInteraction:o.requireInteraction,data:o.data,actions:[{action:"view",title:"👀 Lihat"},{action:"close",title:"❌ Tutup"}]}).catch((e=>(console.error("❌ Error showing notification:",e),self.registration.showNotification("Story App",{body:"Anda memiliki notifikasi baru",tag:"fallback-notification"}))));e.waitUntil(t)})),self.addEventListener("notificationclick",(e=>{if(console.log("🔔 Notification clicked:",e),e.notification.close(),"view"===e.action||!e.action){const o=e.notification.data?.url||"/";e.waitUntil(self.clients.matchAll({type:"window"}).then((e=>{for(let o=0;o<e.length;o++){const t=e[o];if(t.url.includes(self.location.origin)&&"focus"in t)return t.focus()}if(self.clients.openWindow)return self.clients.openWindow(o)})))}})),self.addEventListener("fetch",(e=>{const{request:o}=e,t=new URL(o.url);console.log("🔍 Fetching:",o.url),t.origin===location.origin?e.respondWith(caches.match(o).then((e=>e?(console.log("✅ Cache hit for static asset:",o.url),e):(console.log("🌐 Network request for static asset:",o.url),fetch(o).then((e=>{const t=e.clone();return caches.open(CACHE_NAME).then((e=>{e.put(o,t),console.log("💾 Cached new static asset:",o.url)})),e})).catch((e=>(console.error("❌ Static asset fetch failed:",e),"navigate"===o.mode?caches.match("/index.html"):new Response("Offline content not available")))))))):e.respondWith(fetch(o).then((e=>{console.log("🌐 Network response for API request:",o.url);const t=e.clone();return caches.open(CACHE_NAME).then((e=>{e.put(o,t),console.log("💾 Cached API response:",o.url)})),e})).catch((e=>(console.log("📡 Network request failed, trying cache:",o.url),caches.match(o).then((t=>{if(t)return console.log("✅ Returning cached API response:",o.url),t;throw console.error("❌ No cached data available for:",o.url),e}))))))}));